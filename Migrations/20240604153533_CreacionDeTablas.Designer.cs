// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiMusicalLibrary.Data;

#nullable disable

namespace WebApiMusicalLibrary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240604153533_CreacionDeTablas")]
    partial class CreacionDeTablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Albun", b =>
                {
                    b.Property<int>("IdAlbun")
                        .HasColumnType("int");

                    b.Property<string>("AlbunName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AlbunYear")
                        .HasColumnType("int");

                    b.Property<int>("IdBandSinger")
                        .HasColumnType("int");

                    b.Property<int?>("IdGenre")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("IdSinger")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlbun");

                    b.HasIndex("IdBandSinger");

                    b.HasIndex("IdGenre");

                    b.ToTable("Albun");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Country", b =>
                {
                    b.Property<string>("IdCountry")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdCountry");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Login.MenuOptions", b =>
                {
                    b.Property<string>("IdOption")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("OptionOrder")
                        .HasColumnType("int");

                    b.HasKey("IdOption");

                    b.ToTable("MenuOptions");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.MusicGenre", b =>
                {
                    b.Property<int>("IdGenre")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdGenre");

                    b.ToTable("MusicGenre");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Sales.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdOrder");

                    b.HasIndex("Username");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Sales.OrderDetail", b =>
                {
                    b.Property<int>("IdOrderDetail")
                        .HasColumnType("int");

                    b.Property<int>("IdAlbun")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdOrderDetail");

                    b.HasIndex("IdAlbun");

                    b.HasIndex("IdOrder");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Singer", b =>
                {
                    b.Property<int>("IdSinger")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Members")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SingerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StarDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdSinger");

                    b.HasIndex("IdCountry");

                    b.ToTable("Singer");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Songs", b =>
                {
                    b.Property<int>("IdSong")
                        .HasColumnType("int");

                    b.Property<int?>("Disc")
                        .HasColumnType("int");

                    b.Property<int>("IdAlbun")
                        .HasColumnType("int");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Track")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("IdSong");

                    b.HasIndex("IdAlbun");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.UserModel", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("UserModel");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Albun", b =>
                {
                    b.HasOne("WebApiMusicalLibrary.Models.Singer", "Singer")
                        .WithMany()
                        .HasForeignKey("IdBandSinger")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiMusicalLibrary.Models.MusicGenre", "MusicGenre")
                        .WithMany()
                        .HasForeignKey("IdGenre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MusicGenre");

                    b.Navigation("Singer");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Sales.Order", b =>
                {
                    b.HasOne("WebApiMusicalLibrary.Models.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Sales.OrderDetail", b =>
                {
                    b.HasOne("WebApiMusicalLibrary.Models.Albun", "Albun")
                        .WithMany()
                        .HasForeignKey("IdAlbun")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiMusicalLibrary.Models.Sales.Order", "Order")
                        .WithMany()
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Albun");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Singer", b =>
                {
                    b.HasOne("WebApiMusicalLibrary.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WebApiMusicalLibrary.Models.Songs", b =>
                {
                    b.HasOne("WebApiMusicalLibrary.Models.Albun", "Albun")
                        .WithMany()
                        .HasForeignKey("IdAlbun")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Albun");
                });
#pragma warning restore 612, 618
        }
    }
}
